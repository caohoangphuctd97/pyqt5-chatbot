# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont

SIZE_DEFAULT = 5

class My_QLineedit(QtWidgets.QLineEdit):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setClearButtonEnabled(True)
        self.setTextMargins(20, 5, 5, 5)
        d_font = QFont("Roboto")
        d_font.setPixelSize(15)
        self.setFont(d_font)      # set font

class HoverButton(QtWidgets.QToolButton):
    def __init__(self, parent=None):
        super(HoverButton, self).__init__(parent)
        self.state_button = False
    def resizeEvent(self, event):
        self.setMask(QtGui.QRegion(self.rect(), QtGui.QRegion.Ellipse))
        QtWidgets.QToolButton.resizeEvent(self, event)

    def clickEvent(self):
        self.setStyleSheet('''border-image: url("image/mic.jpg")''')

    def leaveEvent(self,event):
        self.setStyleSheet('''border-image: url("image/micro-01.png")''')


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(350, 450)
        MainWindow.resize(300, 400)
        MainWindow.setStyleSheet("background-color:rgb(0,71,123)")

        # create central widget and layout
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")

        # create message browser, where all the messages are painted
        self.messsageBrowser = QtWidgets.QListView(self.centralwidget)
        self.messsageBrowser.setObjectName("messsageBrowser")
        self.gridLayout.addWidget(self.messsageBrowser, 0, 0, 1, 3)

        # create microphone button
        self.mic = HoverButton(self.centralwidget)
        self.mic.setStyleSheet('''border-image: url("image/micro-01.png")''')
        self.mic.setObjectName("mic")
        self.mic.setMinimumSize(QtCore.QSize(15, 20))
        self.mic.setMaximumSize(QtCore.QSize(15, 20))
        self.mic.pressed.connect(self.mic.clickEvent)
        self.gridLayout.addWidget(self.mic, 1, 0, 1, 1)

        # add stacked widget to hold line edit and label object
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setMaximumSize(QtCore.QSize(16777215, 45))
        self.stackedWidget.setLineWidth(0)
        self.stackedWidget.setObjectName("stackedWidget")

        ## new page to the stack with the line edit object
        self.stack_page_1 = QtWidgets.QWidget()
        self.stack_page_1.setObjectName("stack_page_1")
        self.vert_stack_page_1 = QtWidgets.QVBoxLayout(self.stack_page_1)
        self.vert_stack_page_1.setObjectName("vert_stack_page_1")

        ### add line edit control into which user will type their messages
        self.messageInput = My_QLineedit(self.stack_page_1)
        self.messageInput.setObjectName("messageInput")
        self.messageInput.setStyleSheet("border-image: url(image/mess-form.png);")
        self.messageInput.setMaximumSize(QtCore.QSize(16777215, 32))
        self.vert_stack_page_1.addWidget(self.messageInput)
        self.stackedWidget.addWidget(self.stack_page_1)

        ## next page to hold the label, which will be used to load the gif image
        self.stack_page_2 = QtWidgets.QWidget()
        self.stack_page_2.setObjectName("stack_page_2")
        self.vert_stack_page_2 = QtWidgets.QVBoxLayout(self.stack_page_2)
        self.vert_stack_page_2.setObjectName("vert_stack_page_2")
        ### the actual label
        self.image_label = QtWidgets.QLabel(self.stack_page_2)
        self.image_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_label.setObjectName("label")
        gif_size = QtCore.QSize(self.image_label.width(), self.image_label.height())
        self.gif_object = QtGui.QMovie("image/voice.gif")
        self.gif_object.setScaledSize(gif_size)
        self.image_label.setMovie(self.gif_object)
        self.gif_object.start()
        self.vert_stack_page_2.addWidget(self.image_label)
        self.stackedWidget.addWidget(self.stack_page_2)

        self.gridLayout.addWidget(self.stackedWidget, 1, 1, 1, 1)

        # add push button to send message
        self.pushButton = QtWidgets.QToolButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(20, 20))
        self.pushButton.setMaximumSize(QtCore.QSize(20, 20))
        self.pushButton.setStyleSheet('''border-image: url("image/send_black_24dp 1.png")''')
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setIconSize(QtCore.QSize(19, 17))
        self.gridLayout.addWidget(self.pushButton, 1, 2, 1, 1)

        # set the layout to main window
        self.verticalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)

        # self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))


class PopUp(object):
    def setupUi(self, Dialog: QtWidgets.QDialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(506, 337)
        Dialog.setStyleSheet("border-image: url(image/popup_happybirthday.png);")
        Dialog.setWindowIcon(QtGui.QIcon("image/Avatar-Bot.png"))
        Dialog.setWindowTitle("CareU Bot")
